// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Seals.Duv.Infrastructure.Persistence;

#nullable disable

namespace Seals.Duv.Infrastructure.Migrations
{
    [DbContext(typeof(DuvDbContext))]
    [Migration("20250706131910_AddPassageiroGuid")]
    partial class AddPassageiroGuid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Duv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataViagem")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NavioId")
                        .HasColumnType("integer");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NavioId");

                    b.ToTable("Duvs");
                });

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Navio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bandeira")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Navios");
                });

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Passageiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DuvId")
                        .HasColumnType("integer");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PassageiroGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Sid")
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DuvId");

                    b.ToTable("Passageiros");
                });

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Duv", b =>
                {
                    b.HasOne("Seals.Duv.Domain.Entities.Navio", "Navio")
                        .WithMany("Duvs")
                        .HasForeignKey("NavioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Navio");
                });

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Passageiro", b =>
                {
                    b.HasOne("Seals.Duv.Domain.Entities.Duv", "Duv")
                        .WithMany("Passageiros")
                        .HasForeignKey("DuvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duv");
                });

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Duv", b =>
                {
                    b.Navigation("Passageiros");
                });

            modelBuilder.Entity("Seals.Duv.Domain.Entities.Navio", b =>
                {
                    b.Navigation("Duvs");
                });
#pragma warning restore 612, 618
        }
    }
}
